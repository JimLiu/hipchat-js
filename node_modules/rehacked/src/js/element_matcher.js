var _ = require('./util');

function ElementMatcher(selector) {
  this._selector = selector;
}

ElementMatcher.prototype.test = function (node) {
  var matching = true;
  if (matching && this._selector.tag && this._selector.tag !== "*") {
    matching = (node.type === this._selector.tag) || (node.type && node.type.displayName === this._selector.tag);
  }

  if (matching && this._selector.classes) {
    matching = node.props && node.props.className
    && _.every(
      _.pluck(this._selector.classes, 'regexp'),
      (regexp) => {
        return regexp.test(node.props.className);
      });
  }

  if (matching && this._selector.id) {
    matching = node.props.id === this._selector.id;
  }

  if (matching && this._selector.pseudos) {
    throw "rehacked doesn't understand pseudo classes (yet)";
  }

  if (matching && this._selector.attributes) {
    matching = _.every(this._selector.attributes, (attribute) => {
        var value = node.props[attribute.key];
        return value && attribute.test(value);
      });
  }

  return matching;
};

ElementMatcher.prototype.shouldTraverse = function() {
  return this._selector.combinator !== '>'
};

module.exports = ElementMatcher;


/** WEBPACK FOOTER **
 ** ./~/rehacked/src/js/element_matcher.js
 **/